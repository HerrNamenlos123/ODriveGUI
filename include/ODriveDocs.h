#pragma once

enum class AxisError {
	INVALID_STATE = 0x1,
	WATCHDOG_TIMER_EXPIRED = 0x800,
	MIN_ENDSTOP_PRESSED = 0x1000,
	MAX_ENDSTOP_PRESSED = 0x2000,
	ESTOP_REQUESTED = 0x4000,
	HOMING_WITHOUT_ENDSTOP = 0x20000,
	OVER_TEMP = 0x40000,
	UNKNOWN_POSITION = 0x80000,
};

static std::map<std::string, std::string> AxisErrorDesc = {
	{ "", "" }
};





enum class MotorError {
	PHASE_RESISTANCE_OUT_OF_RANGE = 0x1,
	PHASE_INDUCTANCE_OUT_OF_RANGE = 0x2,
	DRV_FAULT = 0x8,
	CONTROL_DEADLINE_MISSED = 0x10,
	MODULATION_MAGNITUDE = 0x80,
	CURRENT_SENSE_SATURATION = 0x400,
	CURRENT_LIMIT_VIOLATION = 0x1000,
	MODULATION_IS_NAN = 0x10000,
	MOTOR_THERMISTOR_OVER_TEMP = 0x20000,
	FET_THERMISTOR_OVER_TEMP = 0x40000,
	TIMER_UPDATE_MISSED = 0x80000,
	CURRENT_MEASUREMENT_UNAVAILABLE = 0x100000,
	CONTROLLER_FAILED = 0x200000,
	I_BUS_OUT_OF_RANGE = 0x400000,
	BRAKE_RESISTOR_DISARMED = 0x800000,
	SYSTEM_LEVEL = 0x1000000,
	BAD_TIMING = 0x2000000,
	UNKNOWN_PHASE_ESTIMATE = 0x4000000,
	UNKNOWN_PHASE_VEL = 0x8000000,
	UNKNOWN_TORQUE = 0x10000000,
	UNKNOWN_CURRENT_COMMAND = 0x20000000,
	UNKNOWN_CURRENT_MEASUREMENT = 0x40000000,
	UNKNOWN_VBUS_VOLTAGE = 0x80000000,
	UNKNOWN_VOLTAGE_COMMAND = 0x100000000,
	UNKNOWN_GAINS = 0x200000000,
	CONTROLLER_INITIALIZING = 0x400000000,
	UNBALANCED_PHASES = 0x800000000,
};

static std::map<std::string, std::string> MotorErrorDesc = {
	{ "CONTROL_DEADLINE_MISSED", "Is a result of other errors" }
};





enum class EncoderError {
	UNSTABLE_GAIN = 0x1,
	CPR_POLEPAIRS_MISMATCH = 0x2,
	NO_RESPONSE = 0x4,
	UNSUPPORTED_ENCODER_MODE = 0x8,
	ILLEGAL_HALL_STATE = 0x10,
	INDEX_NOT_FOUND_YET = 0x20,
	ABS_SPI_TIMEOUT = 0x40,
	ABS_SPI_COM_FAIL = 0x80,
	ABS_SPI_NOT_READY = 0x100,
	HALL_NOT_CALIBRATED_YET = 0x200
};

static std::map<std::string, std::string> EncoderErrorDesc = {
	{ "", "" }
};





enum class ControllerError {
	OVERSPEED = 0x1,
	INVALID_INPUT_MODE = 0x2,
	UNSTABLE_GAIN = 0x4,
	INVALID_MIRROR_AXIS = 0x8,
	INVALID_LOAD_ENCODER = 0x10,
	INVALID_ESTIMATE = 0x20,
	INVALID_CIRCULAR_RANGE = 0x40,
	SPINOUT_DETECTED = 0x80
};

static std::map<std::string, std::string> ControllerErrorDesc = {
	{ "INVALID_INPUT_MODE", "axis.requested_state might be invalid" }
};
